uint8_t sift(uint8_t character, uint8_t row) {
  uint16_t bitset = uint16_t(row << 8) | character;

  switch (bitset) {

    case 0x033: case 0x035: case 0x037: case 0x045: case 0x046: case 0x054: case 0x05A:
    case 0x223: case 0x23D: case 0x27A:
    case 0x32B: case 0x32D: case 0x341: case 0x348:
    case 0x423: case 0x434: case 0x43D: case 0x465:
    case 0x632: case 0x645: case 0x64C: case 0x65A: case 0x65F: case 0x67A:
      return 0b11111;

    case 0x042: case 0x050: case 0x052:
    case 0x124:
    case 0x235: case 0x270:
    case 0x336: case 0x342: case 0x345: case 0x346: case 0x350: case 0x352:
    case 0x470:
    case 0x524:
    case 0x642: case 0x653: case 0x673:
      return 0b11110;

    case 0x044:
    case 0x644:
      return 0b11100;

    case 0x14D:
    case 0x557:
      return 0b11011;

    case 0x26D:
      return 0b11010;

    case 0x125:
    case 0x24E: case 0x278:
    case 0x362: case 0x368: case 0x36E:
    case 0x430:
      return 0b11001;

    case 0x025: case 0x07D:
    case 0x34B:
    case 0x679: case 0x67D:
      return 0b11000;

    case 0x347:
      return 0b10111;

    case 0x262: case 0x268: case 0x26E:
      return 0b10110;

    case 0x22A: case 0x24D:
    case 0x330: case 0x34D: case 0x34E: case 0x357: case 0x36D:
    case 0x426: case 0x42A: case 0x440: case 0x451: case 0x457: case 0x46D: case 0x477:
    case 0x540: case 0x56D: case 0x577:
    case 0x66D:
      return 0b10101;

    case 0x224: case 0x226: case 0x24B:
    case 0x44B: case 0x452:
      return 0b10100;

    case 0x230:
    case 0x364:
    case 0x44E:
    case 0x525: case 0x575:
    case 0x678:
      return 0b10011;

    case 0x126: case 0x144: case 0x14B:
    case 0x27E:
    case 0x334:
    case 0x526: case 0x544: case 0x54A: case 0x54B: case 0x551: case 0x552: case 0x56A:
      return 0b10010;

    case 0x048: case 0x04B: case 0x04D: case 0x04E: case 0x055: case 0x056: case 0x057: case 0x058: case 0x059:
    case 0x130: case 0x132: case 0x138: case 0x139: case 0x13F: case 0x140: case 0x141: case 0x142: case 0x143:
    case 0x147: case 0x148: case 0x14E: case 0x14F: case 0x150: case 0x151: case 0x152: case 0x155: case 0x156:
    case 0x158: case 0x157: case 0x159:
    case 0x238: case 0x239: case 0x241: case 0x242: case 0x244: case 0x248: case 0x24F: case 0x250: case 0x251:
    case 0x252: case 0x255: case 0x256: case 0x257: case 0x25E: case 0x275: case 0x276: case 0x277: case 0x279:
    case 0x344: case 0x34F: case 0x351: case 0x355: case 0x356: case 0x365: case 0x367: case 0x36F: case 0x370:
    case 0x371: case 0x375: case 0x376: case 0x377:
    case 0x436: case 0x438: case 0x441: case 0x442: case 0x444: case 0x447: case 0x448: case 0x44D: case 0x44F:
    case 0x455: case 0x456: case 0x462: case 0x464: case 0x468: case 0x46E: case 0x46F: case 0x475: case 0x476:
    case 0x530: case 0x533: case 0x535: case 0x536: case 0x538: case 0x541: case 0x542: case 0x543: case 0x547:
    case 0x548: case 0x54D: case 0x54E: case 0x54F: case 0x555: case 0x561: case 0x562: case 0x563: case 0x564:
    case 0x568: case 0x56E: case 0x56F: case 0x558:
    case 0x641: case 0x648: case 0x64B: case 0x64D: case 0x64E: case 0x652: case 0x657: case 0x658: case 0x668:
    case 0x66E:
      return 0b10001;

    case 0x04C: case 0x062: case 0x068:
    case 0x135: case 0x145: case 0x146: case 0x14C: case 0x153: case 0x15C: case 0x162: case 0x168:
    case 0x236: case 0x243: case 0x245: case 0x246: case 0x247: case 0x24C: case 0x253:
    case 0x33C: case 0x343: case 0x34C: case 0x363: case 0x373:
    case 0x443: case 0x445: case 0x446: case 0x44C: case 0x450: case 0x463:
    case 0x52F: case 0x545: case 0x546: case 0x54C: case 0x550: case 0x55A: case 0x565: case 0x570:
    case 0x646: case 0x650: case 0x670:
      return 0b10000;

    case 0x053:
    case 0x267: case 0x271: case 0x273:
    case 0x339:
    case 0x461: case 0x467: case 0x471:
    case 0x647: case 0x661: case 0x664:
      return 0b01111;

    case 0x030: case 0x032: case 0x038: case 0x039: case 0x03F: case 0x040: case 0x041: case 0x043: case 0x047:
    case 0x049: case 0x04F: case 0x05B: case 0x05D:
    case 0x261: case 0x263: case 0x265: case 0x26F: case 0x274:
    case 0x324: case 0x32A: case 0x338: case 0x353: case 0x366:
    case 0x473:
    case 0x051:
    case 0x630: case 0x631: case 0x633: case 0x635: case 0x636: case 0x638: case 0x640: case 0x643: case 0x649:
    case 0x64F: case 0x655: case 0x65B: case 0x65D: case 0x662: case 0x663: case 0x665: case 0x667: case 0x669:
    case 0x66C: case 0x66F:
      return 0b01110;

    case 0x17E:
    case 0x264:
    case 0x340:
    case 0x626: case 0x651: case 0x675:
      return 0b01101;

    case 0x026: case 0x060: case 0x06C:
    case 0x131: case 0x13A: case 0x13B:
    case 0x23A: case 0x23B: case 0x269:
    case 0x372:
    case 0x42C: case 0x43A: case 0x43B: case 0x46B:
    case 0x52E: case 0x53A: case 0x578:
    case 0x62E: case 0x639: case 0x64A: case 0x66A:
      return 0b01100;

    case 0x272:
      return 0b01011;

    case 0x022: case 0x023:
    case 0x122: case 0x123: case 0x15E:
    case 0x222: case 0x234: case 0x258: case 0x259:
    case 0x323: case 0x36B:
    case 0x458:
    case 0x523: case 0x556: case 0x56B: case 0x576:
    case 0x623: case 0x677:
      return 0b01010;

    case 0x26B:
    case 0x379:
    case 0x66B:
      return 0b01001;

    case 0x029: case 0x03E: case 0x06B:
    case 0x136: case 0x15B: case 0x16B:
    case 0x23C: case 0x25B: case 0x25C: case 0x260: case 0x228:
    case 0x326: case 0x328: case 0x35B: case 0x37B:
    case 0x425: case 0x428: case 0x42F: case 0x43C: case 0x45A: case 0x45B: case 0x472:
    case 0x532: case 0x55B: case 0x572: case 0x57A:
    case 0x629: case 0x62C: case 0x63B: case 0x63E: case 0x672:
      return 0b01000;

    case 0x04A:
      return 0b00111;

    case 0x027: case 0x036:
    case 0x127: case 0x134:
    case 0x378:
    case 0x479:
      return 0b00110;

    case 0x166:
    case 0x424:
    case 0x574:
      return 0b00101;

    case 0x021: case 0x024: case 0x031: case 0x05E: case 0x069: case 0x07C: case 0x121: case 0x128: case 0x129:
    case 0x12A: case 0x12B: case 0x13C: case 0x13E: case 0x149: case 0x154: case 0x160: case 0x16C: case 0x174:
    case 0x17B: case 0x17C: case 0x17D: case 0x221: case 0x22B: case 0x231: case 0x233: case 0x249: case 0x254:
    case 0x266: case 0x26C: case 0x27B: case 0x27C: case 0x27D: case 0x321: case 0x325: case 0x32F: case 0x331:
    case 0x337: case 0x349: case 0x354: case 0x358: case 0x359: case 0x35A: case 0x35C: case 0x369: case 0x36C:
    case 0x374: case 0x37C:
    case 0x421: case 0x42B: case 0x431: case 0x432: case 0x437: case 0x449: case 0x454: case 0x459: case 0x466:
    case 0x469: case 0x46C: case 0x474: case 0x478: case 0x47A: case 0x47B: case 0x47C: case 0x47D:
    case 0x528: case 0x529: case 0x52A: case 0x52B: case 0x52C: case 0x531: case 0x537: case 0x53B: case 0x53C:
    case 0x53E: case 0x549: case 0x554: case 0x559: case 0x566: case 0x569: case 0x56C: case 0x579: case 0x57B:
    case 0x57C: case 0x57D:
    case 0x621: case 0x624: case 0x637: case 0x654: case 0x656: case 0x659: case 0x666: case 0x676: case 0x67C:
      return 0b00100;

    case 0x07B:
    case 0x625: case 0x67B:
      return 0b00011;

    case 0x028: case 0x034: case 0x03C: case 0x066: case 0x06A:
    case 0x133: case 0x14A: case 0x15D:
    case 0x225: case 0x227: case 0x229: case 0x22F: case 0x237: case 0x23E: case 0x24A: case 0x25A: case 0x25D:
    case 0x26A:
    case 0x329: case 0x332: case 0x333: case 0x34A: case 0x35D: case 0x36A: case 0x37A: case 0x37D:
    case 0x429: case 0x43E: case 0x43F: case 0x44A: case 0x45C: case 0x45D: case 0x46A:
    case 0x534: case 0x539: case 0x55D:
    case 0x628: case 0x634: case 0x63C: case 0x63F: case 0x674:
      return 0b00010;


    default:
      return !(
               (bitset ^ 0x064) &&
               (bitset ^ 0x12F) && (bitset ^ 0x137) && (bitset ^ 0x15A) && (bitset ^ 0x164) &&
               (bitset ^ 0x232) && (bitset ^ 0x23F) && (bitset ^ 0x240) &&
               (bitset ^ 0x335) && (bitset ^ 0x33E) && (bitset ^ 0x33F) && (bitset ^ 0x361) &&
               (bitset ^ 0x433) && (bitset ^ 0x435) && (bitset ^ 0x439) && (bitset ^ 0x453) &&
               (bitset ^ 0x553) && (bitset ^ 0x55C) && (bitset ^ 0x567) && (bitset ^ 0x571) && (bitset ^ 0x573) &&
               (bitset ^ 0x671)
             );
  }
};
